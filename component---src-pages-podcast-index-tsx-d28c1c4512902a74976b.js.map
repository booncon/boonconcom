{"version":3,"sources":["webpack:///./src/components/SubscribeButton.tsx","webpack:///./src/pages/podcast/index.tsx"],"names":["SubscribeButton","feedUrl","window","dataKey","title","subtitle","description","cover","feeds","type","format","url","script","document","createElement","async","src","setAttribute","span","useRef","useEffect","current","appendChild","ref","href","formatDurationNicely","seconds","date","Date","setSeconds","toISOString","substr","formatDate","timestamp","getMonth","getDate","getFullYear","PodcastPage","queryData","useStaticQuery","sx","variant","marginTop","as","marginBottom","gap","gridTemplateColumns","allMdx","nodes","reverse","map","episode","key","id","to","slug","GatsbyLink","frontmatter","publicationDate","duration","season","episodeNumber","categories","join","fontSize","excerpt"],"mappings":"2FAAA,4BA4DeA,IAvDS,WACtB,IAAMC,EAAU,yCAEhB,GAAsB,oBAAXC,OAAX,CAIA,IAAMC,EAAU,eAAeF,EAC/BC,OAAOC,GAAW,CAChBC,MAAO,gBACPC,SAAU,2CACVC,YACE,yHACFC,MACE,uEACFC,MAAO,CACL,CACEC,KAAM,QACNC,OAAQ,MACRC,IAAKV,EACL,uBACE,wDAKR,IAAMW,EAASC,SAASC,cAAc,UACtCF,EAAOG,OAAQ,EACfH,EAAOI,IAAM,8DAEbJ,EAAOK,aAAa,QAAS,4BAC7BL,EAAOK,aAAa,gBAAiB,MACrCL,EAAOK,aAAa,YAAa,OACjCL,EAAOK,aAAa,iBAAkBd,GACtCS,EAAOK,aAAa,aAAc,WAClCL,EAAOK,aAAa,cAAe,SACnCL,EAAOK,aAAa,aAAc,UAElC,IAAMC,EAAOC,iBAAwB,MAQrC,OANAC,qBAAU,WACJF,EAAKG,SACPH,EAAKG,QAAQC,YAAYV,KAE1B,IAGD,oBAAMW,IAAKL,GACT,4BACE,iBAAGM,KAAMvB,GAAT,0B,kCCtDR,mLAUawB,EAAuB,SAACC,GACnC,IAAIC,EAAO,IAAIC,KAAK,GAEpB,OADAD,EAAKE,WAAWH,GACTC,EAAKG,cAAcC,OAAO,GAAI,IAG1BC,EAAa,SAAUC,GAElC,IAAIN,EAAO,IAAIC,KAAKK,GAmBpB,MAhBa,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAKON,EAAKO,YAAc,IAAMP,EAAKQ,UAAY,KAAOR,EAAKS,eAyFlDC,UArFK,WAClB,IAAMC,EAAYC,yBAAe,cAqBjC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKnC,MAAM,kBACX,YAAC,IAAD,CACEoC,GAAI,CACFC,QAAS,cACTC,UAAW,CAAC,EAAG,KAGjB,YAAC,IAAD,CAASC,GAAG,KAAKH,GAAI,CAAEI,aAAc,CAAC,EAAG,KAAzC,iBAMA,YAAC,IAAD,CACEC,IAAK,EACLL,GAAI,CACFM,oBAAqB,CAAC,MAAO,aAG9BR,EAAUS,OAAOC,MAAMC,UAAUC,KAAI,SAACC,GACrC,OACE,YAAC,IAAD,CAAKC,IAAKD,EAAQE,GAAIb,GAAI,CAAEI,aAAc,CAAC,EAAG,KAC5C,YAAC,IAAD,CACEU,GAAI,YAAcH,EAAQI,KAC1BZ,GAAIa,OACJhB,GAAI,CAAEI,aAAc,CAAC,EAAG,KAExB,YAAC,IAAD,CAASD,GAAG,MACTQ,EAAQM,YAAYrD,MADvB,MACiC+C,EAAQM,YAAYpD,WAGvD,YAAC,IAAD,cACS2B,EAAWmB,EAAQM,YAAYC,iBADxC,iBAEqC,IAClCjC,EAAqB0B,EAAQM,YAAYE,UAH5C,gBAIoCR,EAAQM,YAAYG,OAJxD,gBAKoC,IACjCT,EAAQM,YAAYI,cANvB,aAOiC,IAC9BV,EAAQM,YAAYK,WAAWC,KAAK,OAEvC,YAAC,IAAD,CAAMvB,GAAI,CAAEE,UAAW,CAAC,EAAG,GAAIsB,SAAU,CAAC,EAAG,KAC1Cb,EAAQM,YAAYQ,cAM/B,uBACA,uBACA,YAAC,IAAD,MACA,uBACA,uBACA,YAAC,IAAD,CAAMX,GAAG,IAAId,GAAI,CAAEwB,SAAU,CAAC,EAAG,EAAG,IAAMrB,GAAIa,QAA9C","file":"component---src-pages-podcast-index-tsx-d28c1c4512902a74976b.js","sourcesContent":["/** @jsx jsx */\n\nimport { useEffect, useRef } from \"react\"\nimport { jsx } from \"theme-ui\"\n\nconst SubscribeButton = () => {\n  const feedUrl = \"http://booncon.com/pocast-rss-feed.xml\"\n\n  if (typeof window === \"undefined\") {\n    return\n  }\n\n  const dataKey = `podcastData-${feedUrl}`\n  window[dataKey] = {\n    title: \"bits & pieces\",\n    subtitle: \"How to get things done & love your work.\",\n    description:\n      \"A show about why work is not a job, friendships and riding unicorns. Hosted by Lukas Jakob Hafner and Tobias Johannes.\",\n    cover:\n      \"https://booncon-blahh.s3-eu-west-1.amazonaws.com/bp-cover-shaded.jpg\",\n    feeds: [\n      {\n        type: \"audio\",\n        format: \"mp3\",\n        url: feedUrl,\n        \"directory-url-itunes\":\n          \"https://podcasts.apple.com/us/podcast/bits-pieces/\",\n      },\n    ],\n  }\n\n  const script = document.createElement(\"script\")\n  script.async = true\n  script.src = \"https://cdn.podlove.org/subscribe-button/javascripts/app.js\"\n\n  script.setAttribute(\"class\", \"podlove-subscribe-button\")\n  script.setAttribute(\"data-language\", \"en\")\n  script.setAttribute(\"data-size\", \"big\")\n  script.setAttribute(\"data-json-data\", dataKey)\n  script.setAttribute(\"data-color\", \"#2A9BDA\")\n  script.setAttribute(\"data-format\", \"cover\")\n  script.setAttribute(\"data-style\", \"filled\")\n\n  const span = useRef<HTMLSpanElement>(null)\n\n  useEffect(() => {\n    if (span.current) {\n      span.current.appendChild(script)\n    }\n  }, [])\n\n  return (\n    <span ref={span}>\n      <noscript>\n        <a href={feedUrl}>Subscribe to feed</a>\n      </noscript>\n    </span>\n  )\n}\n\nexport default SubscribeButton\n","/** @jsx jsx */\nimport { useStaticQuery, graphql, Link as GatsbyLink } from \"gatsby\"\n\nimport { Box, Heading, Text, Link, Grid } from \"@theme-ui/components\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport SubscribeButton from \"../../components/SubscribeButton\"\nimport { jsx } from \"theme-ui\"\n\nexport const formatDurationNicely = (seconds: number) => {\n  var date = new Date(0)\n  date.setSeconds(seconds) // specify value for SECONDS here\n  return date.toISOString().substr(11, 8)\n}\n\nexport const formatDate = function (timestamp: string) {\n  // Create a date object from the timestamp\n  var date = new Date(timestamp)\n\n  // Create a list of names for the months\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ]\n\n  // return a formatted date\n  return (\n    months[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear()\n  )\n}\n\nconst PodcastPage = () => {\n  const queryData = useStaticQuery(graphql`\n    query getPodcastData {\n      allMdx {\n        nodes {\n          id\n          slug\n          frontmatter {\n            title\n            episodeNumber\n            excerpt\n            publicationDate\n            season\n            duration\n            categories\n            subtitle\n            url\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <SEO title=\"bits & pieces\" />\n      <Box\n        sx={{\n          variant: \"contentWrap\",\n          marginTop: [2, 4],\n        }}\n      >\n        <Heading as=\"h1\" sx={{ marginBottom: [2, 3] }}>\n          bits & pieces\n        </Heading>\n        {/* <Heading as=\"h2\" sx={{ marginBottom: [2, 3] }}>\n          Latest Episodes:\n        </Heading> */}\n        <Grid\n          gap={4}\n          sx={{\n            gridTemplateColumns: [\"1fr\", \"1fr 1fr\"],\n          }}\n        >\n          {queryData.allMdx.nodes.reverse().map((episode) => {\n            return (\n              <Box key={episode.id} sx={{ marginBottom: [3, 4] }}>\n                <Link\n                  to={\"/podcast/\" + episode.slug}\n                  as={GatsbyLink}\n                  sx={{ marginBottom: [1, 2] }}\n                >\n                  <Heading as=\"h3\">\n                    {episode.frontmatter.title} â€“ {episode.frontmatter.subtitle}\n                  </Heading>\n                </Link>\n                <Text>\n                  Date: {formatDate(episode.frontmatter.publicationDate)}\n                  &nbsp;&nbsp;&nbsp;&nbsp; Duration:{\" \"}\n                  {formatDurationNicely(episode.frontmatter.duration)}\n                  &nbsp;&nbsp;&nbsp;&nbsp; Season: {episode.frontmatter.season}\n                  &nbsp;&nbsp;&nbsp;&nbsp; Episode:{\" \"}\n                  {episode.frontmatter.episodeNumber}\n                  &nbsp;&nbsp;&nbsp;&nbsp; Tags:{\" \"}\n                  {episode.frontmatter.categories.join(\", \")}\n                </Text>\n                <Text sx={{ marginTop: [1, 2], fontSize: [2, 3] }}>\n                  {episode.frontmatter.excerpt}\n                </Text>\n              </Box>\n            )\n          })}\n        </Grid>\n        <br />\n        <br />\n        <SubscribeButton />\n        <br />\n        <br />\n        <Link to=\"/\" sx={{ fontSize: [2, 3, 4] }} as={GatsbyLink}>\n          Go back to the homepage\n        </Link>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default PodcastPage\n"],"sourceRoot":""}