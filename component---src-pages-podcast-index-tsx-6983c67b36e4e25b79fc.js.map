{"version":3,"sources":["webpack:///./src/components/SubscribeButton.js","webpack:///./src/pages/podcast/index.tsx"],"names":["SubscribeButton","componentDidMount","this","props","title","imageUrl","feedUrl","itunesLink","window","dataKey","subtitle","description","cover","feeds","type","format","url","script","document","createElement","async","src","setAttribute","span","appendChild","render","ref","el","href","React","Component","formatDurationNicely","seconds","date","Date","setSeconds","toISOString","substr","formatDate","timestamp","getMonth","getDate","getFullYear","PodcastPage","queryData","useStaticQuery","sx","variant","marginTop","as","marginBottom","gap","gridTemplateColumns","allMdx","nodes","reverse","map","episode","key","id","to","slug","GatsbyLink","frontmatter","publicationDate","duration","season","episodeNumber","categories","join","fontSize","excerpt"],"mappings":"kIAEMA,E,0GACJC,kBAAA,WAAqB,IAAD,EAC+BC,KAAKC,MAA9CC,EADU,EACVA,MAAOC,EADG,EACHA,SAAUC,EADP,EACOA,QAASC,EADhB,EACgBA,WAElC,GAAsB,oBAAXC,OAAX,CAIA,IAAMC,EAAO,eAAkBH,EAC/BE,OAAOC,GAAW,CAChBL,MAAOA,EACPM,SAAU,GACVC,YAAa,GACbC,MAAOP,EACPQ,MAAO,CACL,CACEC,KAAM,QACNC,OAAQ,MACRC,IAAKV,EACL,uBAAwBC,KAK9B,IAAMU,EAASC,SAASC,cAAc,UACtCF,EAAOG,OAAQ,EACfH,EAAOI,IAAM,8DAEbJ,EAAOK,aAAa,QAAS,4BAC7BL,EAAOK,aAAa,gBAAiB,MACrCL,EAAOK,aAAa,YAAa,OACjCL,EAAOK,aAAa,iBAAkBb,GACtCQ,EAAOK,aAAa,aAAc,WAClCL,EAAOK,aAAa,cAAe,SACnCL,EAAOK,aAAa,aAAc,UAElCpB,KAAKqB,KAAKC,YAAYP,K,EAGxBQ,OAAA,WAAU,IAAD,OACCnB,EAAYJ,KAAKC,MAAjBG,QAER,OACE,0BAAMoB,IAAK,SAACC,GAAD,OAAS,EAAKJ,KAAOI,IAC9B,kCACE,uBAAGC,KAAMtB,GAAT,wB,GA7CoBuB,IAAMC,WAoDrB9B,O,kCCtDf,mLAUa+B,EAAuB,SAACC,GACnC,IAAIC,EAAO,IAAIC,KAAK,GAEpB,OADAD,EAAKE,WAAWH,GACTC,EAAKG,cAAcC,OAAO,GAAI,IAG1BC,EAAa,SAAUC,GAElC,IAAIN,EAAO,IAAIC,KAAKK,GAmBpB,MAhBa,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAKON,EAAKO,YAAc,IAAMP,EAAKQ,UAAY,KAAOR,EAAKS,eA8FlDC,UA1FK,WAClB,IAAMC,EAAYC,yBAAe,cAqBjC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKzC,MAAM,kBACX,YAAC,IAAD,CACE0C,GAAI,CACFC,QAAS,cACTC,UAAW,CAAC,EAAG,KAGjB,YAAC,IAAD,CAASC,GAAG,KAAKH,GAAI,CAAEI,aAAc,CAAC,EAAG,KAAzC,iBAMA,YAAC,IAAD,CACEC,IAAK,EACLL,GAAI,CACFM,oBAAqB,CAAC,MAAO,aAG9BR,EAAUS,OAAOC,MAAMC,UAAUC,KAAI,SAACC,GACrC,OACE,YAAC,IAAD,CAAKC,IAAKD,EAAQE,GAAIb,GAAI,CAAEI,aAAc,CAAC,EAAG,KAC5C,YAAC,IAAD,CACEU,GAAI,YAAcH,EAAQI,KAC1BZ,GAAIa,OACJhB,GAAI,CAAEI,aAAc,CAAC,EAAG,KAExB,YAAC,IAAD,CAASD,GAAG,MACTQ,EAAQM,YAAY3D,MADvB,MACiCqD,EAAQM,YAAYrD,WAGvD,YAAC,IAAD,cACS4B,EAAWmB,EAAQM,YAAYC,iBADxC,iBAEqC,IAClCjC,EAAqB0B,EAAQM,YAAYE,UAH5C,gBAIoCR,EAAQM,YAAYG,OAJxD,gBAKoC,IACjCT,EAAQM,YAAYI,cANvB,aAOiC,IAC9BV,EAAQM,YAAYK,WAAWC,KAAK,OAEvC,YAAC,IAAD,CAAMvB,GAAI,CAAEE,UAAW,CAAC,EAAG,GAAIsB,SAAU,CAAC,EAAG,KAC1Cb,EAAQM,YAAYQ,cAM/B,uBACA,uBACA,YAAC,IAAD,CACElE,SAAS,uEACTD,MAAM,gBACNE,QAAQ,yCACRC,WAAW,uDAEb,uBACA,uBACA,YAAC,IAAD,CAAMqD,GAAG,IAAId,GAAI,CAAEwB,SAAU,CAAC,EAAG,EAAG,IAAMrB,GAAIa,QAA9C","file":"component---src-pages-podcast-index-tsx-6983c67b36e4e25b79fc.js","sourcesContent":["import React from \"react\"\n\nclass SubscribeButton extends React.Component {\n  componentDidMount() {\n    const { title, imageUrl, feedUrl, itunesLink } = this.props\n\n    if (typeof window === \"undefined\") {\n      return\n    }\n\n    const dataKey = `podcastData-${feedUrl}`\n    window[dataKey] = {\n      title: title,\n      subtitle: \"\",\n      description: \"\",\n      cover: imageUrl,\n      feeds: [\n        {\n          type: \"audio\",\n          format: \"mp3\",\n          url: feedUrl,\n          \"directory-url-itunes\": itunesLink,\n        },\n      ],\n    }\n\n    const script = document.createElement(\"script\")\n    script.async = true\n    script.src = \"https://cdn.podlove.org/subscribe-button/javascripts/app.js\"\n\n    script.setAttribute(\"class\", \"podlove-subscribe-button\")\n    script.setAttribute(\"data-language\", \"en\")\n    script.setAttribute(\"data-size\", \"big\")\n    script.setAttribute(\"data-json-data\", dataKey)\n    script.setAttribute(\"data-color\", \"#2A9BDA\")\n    script.setAttribute(\"data-format\", \"cover\")\n    script.setAttribute(\"data-style\", \"filled\")\n\n    this.span.appendChild(script)\n  }\n\n  render() {\n    const { feedUrl } = this.props\n\n    return (\n      <span ref={(el) => (this.span = el)}>\n        <noscript>\n          <a href={feedUrl}>Subscribe to feed</a>\n        </noscript>\n      </span>\n    )\n  }\n}\n\nexport default SubscribeButton\n","/** @jsx jsx */\nimport { useStaticQuery, graphql, Link as GatsbyLink } from \"gatsby\"\n\nimport { Box, Heading, Text, Link, Grid } from \"@theme-ui/components\"\n\nimport Layout from \"../../components/layout\"\nimport SEO from \"../../components/seo\"\nimport SubscribeButton from \"../../components/SubscribeButton\"\nimport { jsx } from \"theme-ui\"\n\nexport const formatDurationNicely = (seconds: number) => {\n  var date = new Date(0)\n  date.setSeconds(seconds) // specify value for SECONDS here\n  return date.toISOString().substr(11, 8)\n}\n\nexport const formatDate = function (timestamp: string) {\n  // Create a date object from the timestamp\n  var date = new Date(timestamp)\n\n  // Create a list of names for the months\n  var months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ]\n\n  // return a formatted date\n  return (\n    months[date.getMonth()] + \" \" + date.getDate() + \", \" + date.getFullYear()\n  )\n}\n\nconst PodcastPage = () => {\n  const queryData = useStaticQuery(graphql`\n    query getPodcastData {\n      allMdx {\n        nodes {\n          id\n          slug\n          frontmatter {\n            title\n            episodeNumber\n            excerpt\n            publicationDate\n            season\n            duration\n            categories\n            subtitle\n            url\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <SEO title=\"bits & pieces\" />\n      <Box\n        sx={{\n          variant: \"contentWrap\",\n          marginTop: [2, 4],\n        }}\n      >\n        <Heading as=\"h1\" sx={{ marginBottom: [2, 3] }}>\n          bits & pieces\n        </Heading>\n        {/* <Heading as=\"h2\" sx={{ marginBottom: [2, 3] }}>\n          Latest Episodes:\n        </Heading> */}\n        <Grid\n          gap={4}\n          sx={{\n            gridTemplateColumns: [\"1fr\", \"1fr 1fr\"],\n          }}\n        >\n          {queryData.allMdx.nodes.reverse().map((episode) => {\n            return (\n              <Box key={episode.id} sx={{ marginBottom: [3, 4] }}>\n                <Link\n                  to={\"/podcast/\" + episode.slug}\n                  as={GatsbyLink}\n                  sx={{ marginBottom: [1, 2] }}\n                >\n                  <Heading as=\"h3\">\n                    {episode.frontmatter.title} â€“ {episode.frontmatter.subtitle}\n                  </Heading>\n                </Link>\n                <Text>\n                  Date: {formatDate(episode.frontmatter.publicationDate)}\n                  &nbsp;&nbsp;&nbsp;&nbsp; Duration:{\" \"}\n                  {formatDurationNicely(episode.frontmatter.duration)}\n                  &nbsp;&nbsp;&nbsp;&nbsp; Season: {episode.frontmatter.season}\n                  &nbsp;&nbsp;&nbsp;&nbsp; Episode:{\" \"}\n                  {episode.frontmatter.episodeNumber}\n                  &nbsp;&nbsp;&nbsp;&nbsp; Tags:{\" \"}\n                  {episode.frontmatter.categories.join(\", \")}\n                </Text>\n                <Text sx={{ marginTop: [1, 2], fontSize: [2, 3] }}>\n                  {episode.frontmatter.excerpt}\n                </Text>\n              </Box>\n            )\n          })}\n        </Grid>\n        <br />\n        <br />\n        <SubscribeButton\n          imageUrl=\"https://booncon-blahh.s3-eu-west-1.amazonaws.com/bp-cover-shaded.jpg\"\n          title=\"bits & pieces\"\n          feedUrl=\"http://booncon.com/pocast-rss-feed.xml\"\n          itunesLink=\"https://podcasts.apple.com/us/podcast/bits-pieces/\"\n        />\n        <br />\n        <br />\n        <Link to=\"/\" sx={{ fontSize: [2, 3, 4] }} as={GatsbyLink}>\n          Go back to the homepage\n        </Link>\n      </Box>\n    </Layout>\n  )\n}\n\nexport default PodcastPage\n"],"sourceRoot":""}